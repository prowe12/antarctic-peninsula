{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12340\viewh11540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Steps for Analysis:\
\
Overall:\
A) Collect the data and put it in the appropriate directories. Here, within \'91\'85/Sync/measurements/Escudero/\'91\
1) LWD (Longwave downward radiation): pyranometer/orig_v1; From instrument\
2) SWD (Shortwave downward radiation): pyrgeometer/orig_v2; From instrument\
3) Sonde: GRAW_radiosondes/simulation/yopp2022_escudero_profiles; From instrument\
4) ERA5: era5/; From online using get_era5.py; need to set dates in parameter file\
5) CO2: co2/; See readme_carbontracker.rtf, readme_co2_surface_flask.rtf, readme_co2_noaa_esrl.rtf\
\
B) Convert the raw data files into standardized data files, using code in escudero/get_stand_files:\
1) LWD: pyr_save_stand_files_lwd.py, uses antarc.pyr_save_stand_files and antarc/escudero/parameters/lwd_orig_params.py. Results in \'85/measurements/Escudero/pyranometer/stand/yyyy/\
2) SWD: pyr_save_stand_files_swd.py, uses antarc.pyr_save_stand_files and antarc/escudero/parameters/swd_orig_params. Results in \'85/measurements/Escudero/pyrgeometer/stand/yyyy/\
3) Sonde: sonde_raw_to_data_denial_format.py. Results in \'85/measurements/Escudero/radiosondes/datadenial\
4) ERA5: get_era5_from_web.py.\
5) CO2: These files are left in their original format.\
\
C) Longwave:\
1) Do steps A1 and B1 above for the desired date range.\
2) get_atm_profs.py: Create atmospheric profiles from radiosondes and ancillary data.\
3) get_clear_fluxes: with bwn=238, ewn=1500 and bwn=1500, ewn=2222: Do LBLRTM runs to get clear-sky fluxes. These go in to lwd_clear directory\
4) Load in the lwd measurements and the clear sky files created in the previous step\
5) Subtract cloudy and clear-sky fluxes to get LW forcing\
\
D) Shortwave:\
1) get_obs_swd(): Load pyranometer data\
2) compute clear-sky SWD flux\
3) Subtract cloudy and clear-sky fluxes to get SW forcing\
\
E) miniMPL (prep for Robert Stillwell):\
1) Create minute netcdf files\
2) Create netcdf files in Stillwell format\
3) Create afterpulse .mpl and .csv files.\
4) Create atmospheric profiles.\
5) Get ERA5 profiles\
6) run mpl processing\
\
Sky camera images:\
- Check out the time period of interest \
\
\
get_atm_profs_KGI.py\
	Inputs: Station name, date range\
	Outputs: atmospheric profiles, figures\
	Calls: get_atm_profs_KGI_rsrc.py, etc\
	Notes: Not suitable for running DISORT because large temperature diffs are allowed.\
		Does not currently work for all dates.\
\
run_radtran.py: \
	Inputs: inputs.nml\
	Outputs: Files with fluxes written to them.\
	Calls: LBLRTM, etc\
	Notes: Run multiple cases at once by using different variables \'93proc\'94\
\
get_pyranometer_files.py:\
	Inputs: pyranometer csv files from specified directory\
	Outputs: pyranometer data in .npz and .txt file\
	Calls: \'85\
\
\
get_pyranometer_factor.py: \
\
Not used (I think):\
get_era_interim_KGI_RH.py\
run_radtran_sw_unfinished.py\
inputs_sw.nml\
}